swagger: "2.0"
info:
  description: "This is a demo application on vehicle registration"
  version: "1.0.0"
  title: "Demo Vehicle Registration"
host: "petstore.swagger.io"
basePath: "/demo"
schemes:
- "http"
paths:
  /person:
    post:
      tags:
      - "person"
      summary: "Add a person detail"
      description: ""
      operationId: "savePerson"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Person object to be saved"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        "200":
          description: "Success"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Person"
        "400":
          description: "Invalid input"
        "500":
          description: "Server error"
  /person/{personId}:
    get:
      tags:
      - "person"
      summary: "Add a person detail"
      description: ""
      operationId: "getPerson"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "personId"
        in: "path"
        description: "Get person Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Success"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Person"
        "400":
          description: "Invalid input"
        "500":
          description: "Server error"          
  /vehicle:
    post:
      tags:
      - "vehicle"
      summary: "Add a vehicle information"
      description: ""
      operationId: "saveVehicle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Vehicle object to be saved"
        required: true
        schema:
          $ref: "#/definitions/Vehicle"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Success"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Vehicle"
        "500":
          description: "Server error"               
  
  /registration:
    get:
      tags:
      - "register vehicle"
      summary: "Get all vehicle registration"
      description: ""
      operationId: "getRegisterVehicle"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"          
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Registration"     
    post:
      tags:
      - "register vehicle"
      summary: "Register vehicle"
      description: ""
      operationId: "saveRegisterVehicle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Register a Vehicle"
        required: true
        schema:
          $ref: "#/definitions/Registration"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Success"       
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Registration"
    put:
      tags:
      - "register vehicle"
      summary: "Update register vehicle"
      description: ""
      operationId: "putRegisterVehicle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Get Vehicle Registration"
        required: true
        schema:
          $ref: "#/definitions/Registration"
      responses:
        "400":
          description: "Invalid input"
        "404":
          description: "Resource not found"  
        "200":
          description: "Success"
  
  /registration/person/{id}:
    get:
      tags:
      - "register vehicle"
      summary: "Get all vehicle registration by person id"
      description: ""
      operationId: "getRegisterVehicleByPersonId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Get person Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Registration"
  /registration/all:
    get:
      tags:
      - "register vehicle"
      summary: "All vehicle registration"
      description: "List all vehicle registration"
      operationId: "listRegisterVehicle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"    
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Registration"             
definitions:
  Person:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstname:
        type: "string"
      lastname:
        type: "string"
  Vehicle:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      model:
        type: "string"
      color:
        type: "string"
      plateNo:
        type: "string"
  Registration:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      owner:
        $ref: "#/definitions/Person"
      vehicle_id:
        $ref: "#/definitions/Vehicle"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"